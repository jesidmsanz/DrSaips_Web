import React, {
  PropsWithChildren,
  useCallback,
  useEffect,
  useState,
} from "react";
import { useResizeDetector } from "react-resize-detector";
import Head from "next/head";
import Sidebar, { SidebarOverlay } from "@layout/AdminLayout/Sidebar/Sidebar";
import Header from "@layout/AdminLayout/Header/Header";
import Footer from "@layout/AdminLayout/Footer/Footer";
import { Container } from "react-bootstrap";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";

export default function AdminLayout({ children }) {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const { status, data } = useSession();
  const route = useRouter();

  // Show status for xs screen
  const [isShowSidebar, setIsShowSidebar] = useState(false);

  // Show status for md screen and above
  const [isShowSidebarMd, setIsShowSidebarMd] = useState(true);

  const toggleIsShowSidebar = () => {
    setIsShowSidebar(!isShowSidebar);
  };

  const toggleIsShowSidebarMd = () => {
    const newValue = !isShowSidebarMd;
    localStorage.setItem("isShowSidebarMd", newValue ? "true" : "false");
    setIsShowSidebarMd(newValue);
  };

  // Clear and reset sidebar
  const resetIsShowSidebar = () => {
    setIsShowSidebar(false);
  };

  const onResize = useCallback(() => {
    resetIsShowSidebar();
  }, []);

  const { ref } = useResizeDetector({ onResize });

  // On first time load only
  useEffect(() => {
    if (localStorage.getItem("isShowSidebarMd")) {
      setIsShowSidebarMd(localStorage.getItem("isShowSidebarMd") === "true");
    }
  }, [setIsShowSidebarMd]);

  useEffect(() => {
    if (status !== "authenticated" && status !== "loading")
      route.push("/login");
    else if (status === "authenticated") setIsAuthenticated(true);
  }, [status]);

  return (
    <>
      {isAuthenticated ? (
        <>
          <Head>
            <title>DrSaips</title>
            <meta name="description" content="Generated by DrSaips" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <div ref={ref} className="position-absolute w-100" />

          <Sidebar isShow={isShowSidebar} isShowMd={isShowSidebarMd} />

          <div className="wrapper d-flex flex-column min-vh-100 bg-light">
            <Header
              toggleSidebar={toggleIsShowSidebar}
              toggleSidebarMd={toggleIsShowSidebarMd}
            />
            <div className="body flex-grow-1 px-sm-2 mb-4">
              <div fluid="lg">{children}</div>
            </div>
            <Footer />
          </div>

          <SidebarOverlay
            isShowSidebar={isShowSidebar}
            toggleSidebar={toggleIsShowSidebar}
          />
        </>
      ) : (
        ""
      )}
    </>
  );
}
